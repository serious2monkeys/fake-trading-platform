plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.72'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group = 'ru.doronin'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}

ext {
  kotlinVersion = '1.3.72'
  vertxVersion = '3.9.0'
  logback_version = '1.2.3'
  junitJupiterEngineVersion = '5.4.0'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}


def mainVerticleName = 'platform.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  apply from: '../commonDependencies.gradle'
  implementation project(':common-components')
  implementation "io.vertx:vertx-web-client:$vertxVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-config-yaml:$vertxVersion"
  implementation "ch.qos.logback:logback-classic:$logback_version"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
  implementation "io.vertx:vertx-stomp:$vertxVersion"
  implementation "io.vertx:vertx-web-templ-thymeleaf:$vertxVersion"
  implementation "io.vertx:vertx-mongo-client:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"

  implementation 'at.favre.lib:bcrypt:0.9.0'

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

compileKotlin {
  kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '11'
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
